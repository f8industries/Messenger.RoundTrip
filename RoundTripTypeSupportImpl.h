/* -*- C++ -*- */
/* Generated by C:\OpenDDS-3.9\bin\opendds_idl.exe version 3.9 (ACE version 6.2a_p10) running on input file RoundTrip.idl */
#ifndef OPENDDS_IDL_GENERATED_ROUNDTRIPTYPESUPPORTIMPL_H_IWBOCB
#define OPENDDS_IDL_GENERATED_ROUNDTRIPTYPESUPPORTIMPL_H_IWBOCB
#include "RoundTripC.h"
#include "dds/DCPS/Definitions.h"
#include "dds/DCPS/Serializer.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: Messenger */



/* Begin TYPEDEF: chars */

namespace OpenDDS { namespace DCPS {

void gen_find_size(const Messenger::chars& seq, size_t& size, size_t& padding);

bool operator<<(Serializer& strm, const Messenger::chars& seq);

bool operator>>(Serializer& strm, Messenger::chars& seq);

}  }

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

void gen_skip_over(Serializer& ser, Messenger::chars*);

}  }

#endif

/* End TYPEDEF: chars */


/* Begin STRUCT: Sample */

namespace OpenDDS { namespace DCPS {

void gen_find_size(const Messenger::Sample& stru, size_t& size, size_t& padding);

bool operator<<(Serializer& strm, const Messenger::Sample& stru);

bool operator>>(Serializer& strm, Messenger::Sample& stru);

}  }

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
const MetaStruct& getMetaStruct<Messenger::Sample>();
void gen_skip_over(Serializer& ser, Messenger::Sample*);

}  }

#endif

/* End STRUCT: Sample */

/* End MODULE: Messenger */
#endif /* OPENDDS_IDL_GENERATED_ROUNDTRIPTYPESUPPORTIMPL_H_IWBOCB */
